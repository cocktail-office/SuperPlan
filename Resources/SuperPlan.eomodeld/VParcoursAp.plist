{
    attributes = (
        {
            columnName = "FANN_KEY"; 
            externalType = NUMBER; 
            name = fannKey; 
            precision = 4; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            columnName = "FDIP_CODE"; 
            externalType = VARCHAR2; 
            name = fdipCode; 
            valueClassName = NSString; 
            valueType = S; 
            width = 7; 
        }, 
        {
            columnName = "FSPN_KEY"; 
            externalType = NUMBER; 
            name = fspnKey; 
            precision = 6; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            columnName = "MAP_KEY"; 
            externalType = NUMBER; 
            name = mapKey; 
            precision = 6; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            columnName = "MEC_KEY"; 
            externalType = NUMBER; 
            name = mecKey; 
            precision = 6; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            columnName = "MPAR_KEY"; 
            externalType = NUMBER; 
            name = mparKey; 
            precision = 6; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            columnName = "MSEM_KEY"; 
            externalType = NUMBER; 
            name = msemKey; 
            precision = 6; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            columnName = "MTEC_CODE"; 
            externalType = VARCHAR2; 
            name = mtecCode; 
            valueClassName = NSString; 
            valueType = S; 
            width = 5; 
        }
    ); 
    attributesUsedForLocking = (fannKey, fdipCode, fspnKey, mapKey, mecKey, mparKey, msemKey, mtecCode); 
    className = "org.cocktail.superplan.server.metier.VParcoursAp"; 
    classProperties = (
        ap, 
        diplome, 
        ec, 
        examenEntetes, 
        fannKey, 
        mtecCode, 
        parcours, 
        semestre, 
        specialisation
    ); 
    externalName = "EDTSCOL.V_PARCOURS_AP"; 
    fetchSpecificationDictionary = {}; 
    internalInfo = {
        "_clientClassPropertyNames" = (
            ap, 
            diplome, 
            ec, 
            examenEntetes, 
            fannKey, 
            mtecCode, 
            parcours, 
            semestre, 
            specialisation
        ); 
        "_javaClientClassName" = "org.cocktail.superplan.client.metier.VParcoursAp"; 
    }; 
    name = VParcoursAp; 
    primaryKeyAttributes = (mapKey, mecKey, mparKey, msemKey); 
    relationships = (
        {
            destination = MaquetteAp; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = mapKey; sourceAttribute = mapKey; }); 
            name = ap; 
        }, 
        {
            destination = FormationDiplome; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = fdipCode; sourceAttribute = fdipCode; }); 
            name = diplome; 
        }, 
        {
            destination = MaquetteEc; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = mecKey; sourceAttribute = mecKey; }); 
            name = ec; 
        }, 
        {
            deleteRule = EODeleteRuleNoAction; 
            destination = ExamenEntete; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = mecKey; sourceAttribute = mecKey; }); 
            name = examenEntetes; 
        }, 
        {
            destination = MaquetteParcours; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = mparKey; sourceAttribute = mparKey; }); 
            name = parcours; 
        }, 
        {
            destination = MaquetteSemestre; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = msemKey; sourceAttribute = msemKey; }); 
            name = semestre; 
        }, 
        {
            destination = FormationSpecialisation; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = fspnKey; sourceAttribute = fspnKey; }); 
            name = specialisation; 
        }
    ); 
    userInfo = {fetchSpecificationDictionary = {}; }; 
}
